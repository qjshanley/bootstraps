AWSTemplateFormatVersion: 2010-09-09
Description: Some service
Parameters:
  PlacementConstraints:
    Type: String
    Description: Name of the environment you want to deploy your service to. EXAMPLE attribute:stack == development
  DesiredCount:
    Type: Number
    Description: The number of tasks (copies) you want running for this service.
Resources:
  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub "${AWS::StackName}"
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: "/containers/"
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !ImportValue "Playground-Network:VPC"
  AlbListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - 
          Type: forward
          TargetGroupArn: !Ref 'TargetGroup'
      LoadBalancerArn: !ImportValue "Playground-ALB-Development:Arn"
      Port: 80
      Protocol: HTTP
  ECSAlbListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      Actions:
        - 
          Type: forward
          TargetGroupArn: !Ref 'TargetGroup'
      Conditions:
        - 
          Field: host-header
          Values: ["latest.cadvisor.qub3r.com"]
      ListenerArn: !Ref 'AlbListener'
      Priority: 1
  CloudwatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Join ['-', [ECSLogGroup, !Ref 'AWS::StackName']]
      RetentionInDays: 14
  TaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: cadvisor
      ContainerDefinitions:
        - 
          Name: "cadvisor"
          Hostname: "cadvisor"
          Image: "google/cadvisor"
          Essential: true
          Cpu: 10
          Memory: 300
          PortMappings:
            - 
              ContainerPort: 8080
              HostPort: 0
          Environment:
            -
              Name: "SERVICE_8080_NAME"
              Value: "cadvisor"
          MountPoints:
            -
              SourceVolume: "root"
              ContainerPath: "/rootfs"
              ReadOnly: true
            -
              SourceVolume: "var_run"
              ContainerPath: "/var/run"
              ReadOnly: false
            -
              SourceVolume: "sys"
              ContainerPath: "/sys"
              ReadOnly: true
            -
              SourceVolume: "var_lib_docker"
              ContainerPath: "/var/lib/docker"
              ReadOnly: true
          LogConfiguration:
            LogDriver: "awslogs"
            Options:
              awslogs-group: !Ref "CloudwatchLogsGroup"
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: "cadvisor"
      Volumes:
        -
          Name: "root"
          Host:
            SourcePath: "/"
        -
          Name: "var_run"
          Host:
            SourcePath: "/var/run"
        -
          Name: "sys"
          Host:
            SourcePath: "/sys"
        -
          Name: "var_lib_docker"
          Host:
            SourcePath: "/var/lib/docker/"

  Service:
    Type: AWS::ECS::Service
    Properties:
      Cluster: "Playground-ECS-Development"
      DesiredCount: !Ref DesiredCount
      DeploymentConfiguration:
        MinimumHealthyPercent: 50
        MaximumPercent: 200
      PlacementConstraints:
        - 
          Type: memberOf
          Expression: !Sub "${PlacementConstraints}" 
      PlacementStrategies:
        - 
          Type: spread
          Field: "attribute:ecs.availability-zone"
      LoadBalancers:
        - 
          ContainerName: cadvisor
          ContainerPort: 8080
          TargetGroupArn: !Ref 'TargetGroup'
      Role: "Playground-ECS-Development-Role"
      TaskDefinition: !Ref 'TaskDefinition'